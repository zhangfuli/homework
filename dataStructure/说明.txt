作业一:
实习目的：熟练掌握链表的建立及基本操作

问题描述：

1）实现链表的排序(升序)

2）实现两个有序链表的合并：A=A∪B，要求合并后仍然有序。

提交前请将所有的提示信息去掉，只保留最后的输出结果。例如运行时：从键盘直接输入：

2 1 2
3 1 2 3 

输出结果为：

1
2
3

分别表示第一个链表元素个数为2，元素分别为 1,2 ；第二个链表元素个数为3，元素分别为1,2,3。

作业二:
一元多项式的基本运算

实验目的：掌握用线性表实现一元多项式的基本运算。

实验内容：使用链式存储实现一元多项式的加法、减法、乘法和求导。即：

C(x)= A(x)+B(x)；C(x)= A(x)-B(x) C(x)= A(x)*B(x) C(x)= A’(x)

菜单：

1)C ：分别创建两个多项式A(x)和B(x)，其中 输入时按照 指数的升序顺序输入，遇到系数为0则停止。例如：输入 ：

1 2 3 4 5 6 7 8

0 2 3 4 5 6 7 0 则生成的多项式分别为：

A(x)=x^2+3x^4+5x^6+7x^8

B(x)=2x^3+4x^5+6x^7

2)P:计算C(x)= A(x)+B(x)，计算完毕后输出C(x)的 结果

3)S: 计算C(x)= A(x)-B(x)，计算完毕后输出C(x)的 结果

4)M: 计算C(x)= A(x)*B(x)，计算完毕后输出C(x)的 结果

5)D: 计算C(x)= A’(x)，计算完毕后输出C(x)的 结果

6)V: 首先输入一个 float型数据，然后计算 A(x)并输出计算的结果。

7)C: 分别清空A(x)、B(x)、C(x)三个多项式。

8)X: 退出程序。

括号匹配：
用栈实现：输入一行符号,以#结束，判断其中的括号是否匹配。括号包括：[],<>,{},()

第一次课堂之星：

已知三个带头结点的线性链表A、B和C中的结点均依元素值自小至大非递减排列（可能存在两个以上值相同的结点），编写算法对A表进行如下操作：使操作后的链表A中仅留下三个表中均包含的数据元素的结点，且没有值相同的结点，并释放所有无用结点。限定算法的时间复杂度为O（m+n+p），其中m、n和p分别为三个表的长度。